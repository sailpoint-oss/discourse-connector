name: "build and push connector to S3 and dev tennant"

env: 
  JIRA_PROJECT: "DEVREL"
  JIRA_COMPONENT: "Connectivity"
  SLACK_CHANNEL: "#devrel-engineering"
  CONNECTOR_NAME: "conn-discourse"


  SAIL_BASEURL: ${{ secrets.CONN_SAIL_BASEURL }}
  SAIL_TOKENURL: ${{ secrets.CONN_SAIL_TOKENURL }}
  SAIL_CLIENTID: ${{ secrets.CONN_SAIL_CLIENTID }}
  SAIL_CLIENTSECRET: ${{ secrets.CONN_SAIL_CLIENTSECRET }}

  CONNECTOR_ALIAS: "DiscourseConnector"

on:
  push:
    branches:
      - main  # assuming you're using the 'main' branch; adjust if you use 'master' or another
    paths:
      - 'package.json'
  workflow_dispatch:


jobs:
  build_connector:
    name: Build the connector
    runs-on: ubuntu-latest
    steps:
      # Checkout the master branch request to run rsync
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      # Checkout the master branch request to run rsync
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Check version change
        run: |
          VERSION_CHANGED=$(git diff HEAD^ HEAD -- "package.json" | grep '\"version\"')
          if [ -z "$VERSION_CHANGED" ]; then
            echo "package.json version has not changed."
            exit 1
          fi
      - name: Run npm install and build connector
        id: buildConnector
        run: |
          npm install
          npm run pack-zip
      - name: Extract version from package.json
        run: |
          echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
      - name: Fetch pull requests
        run: |
          PR_LIST=$(gh pr list --base main --state merged --json title,number --limit 100 | jq -r '.[] | "- #" + (.number|tostring) + ": " + .title')
          echo "PR_LIST=$PR_LIST" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: Release v${{ env.PACKAGE_VERSION }}
          body: |
            ### Changes:
            ${{ env.PR_LIST }}